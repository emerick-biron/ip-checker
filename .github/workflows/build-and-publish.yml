name: Build and Publish Release Assets

on:
  release:
    types: [ published ]

jobs:
  build-and-publish-python:
    name: Build and Publish Python Package
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3

      - name: Configure Poetry
        run: |
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry config virtualenvs.create false

      - name: Install dependencies
        run: poetry install

      - name: Build package
        run: poetry build

      - name: Upload .whl and .tar.gz to release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.whl
            dist/*.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}

  build-and-publish-docker:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract release tag
        id: extract_tag
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          TAG=${TAG#v}
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ steps.extract_tag.outputs.tag }}
